// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/skyflowapi/skyflow-go/internal"
)

type V1DeleteTokenRequest struct {
	// Vault ID
	VaultId *string `json:"vaultID,omitempty" url:"-"`
	// Token value
	Tokens []string `json:"tokens,omitempty" url:"-"`
}

type ProtobufAny struct {
	Type *string `json:"@type,omitempty" url:"@type,omitempty"`

	ExtraProperties map[string]interface{} `json:"-" url:"-"`

	rawJSON json.RawMessage
}

func (p *ProtobufAny) GetType() *string {
	if p == nil {
		return nil
	}
	return p.Type
}

func (p *ProtobufAny) GetExtraProperties() map[string]interface{} {
	return p.ExtraProperties
}

func (p *ProtobufAny) UnmarshalJSON(data []byte) error {
	type embed ProtobufAny
	var unmarshaler = struct {
		embed
	}{
		embed: embed(*p),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*p = ProtobufAny(unmarshaler.embed)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.ExtraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *ProtobufAny) MarshalJSON() ([]byte, error) {
	type embed ProtobufAny
	var marshaler = struct {
		embed
	}{
		embed: embed(*p),
	}
	return internal.MarshalJSONWithExtraProperties(marshaler, p.ExtraProperties)
}

func (p *ProtobufAny) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

// `NullValue` is a singleton enumeration to represent the null value for the
// `Value` type union.
//
// The JSON representation for `NullValue` is JSON `null`.
//
//   - NULL_VALUE: Null value.
type ProtobufNullValue = string

type RpcStatus struct {
	Code    *int           `json:"code,omitempty" url:"code,omitempty"`
	Message *string        `json:"message,omitempty" url:"message,omitempty"`
	Details []*ProtobufAny `json:"details,omitempty" url:"details,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (r *RpcStatus) GetCode() *int {
	if r == nil {
		return nil
	}
	return r.Code
}

func (r *RpcStatus) GetMessage() *string {
	if r == nil {
		return nil
	}
	return r.Message
}

func (r *RpcStatus) GetDetails() []*ProtobufAny {
	if r == nil {
		return nil
	}
	return r.Details
}

func (r *RpcStatus) GetExtraProperties() map[string]interface{} {
	return r.extraProperties
}

func (r *RpcStatus) UnmarshalJSON(data []byte) error {
	type unmarshaler RpcStatus
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = RpcStatus(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *r)
	if err != nil {
		return err
	}
	r.extraProperties = extraProperties
	r.rawJSON = json.RawMessage(data)
	return nil
}

func (r *RpcStatus) String() string {
	if len(r.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(r.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}

type V1DeleteTokenResponseObject struct {
	// Token value
	Value *string `json:"value,omitempty" url:"value,omitempty"`
	// Error if deletion failed
	Error *string `json:"error,omitempty" url:"error,omitempty"`
	// HTTP status code of the response
	HttpCode *int `json:"httpCode,omitempty" url:"httpCode,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (v *V1DeleteTokenResponseObject) GetValue() *string {
	if v == nil {
		return nil
	}
	return v.Value
}

func (v *V1DeleteTokenResponseObject) GetError() *string {
	if v == nil {
		return nil
	}
	return v.Error
}

func (v *V1DeleteTokenResponseObject) GetHttpCode() *int {
	if v == nil {
		return nil
	}
	return v.HttpCode
}

func (v *V1DeleteTokenResponseObject) GetExtraProperties() map[string]interface{} {
	return v.extraProperties
}

func (v *V1DeleteTokenResponseObject) UnmarshalJSON(data []byte) error {
	type unmarshaler V1DeleteTokenResponseObject
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*v = V1DeleteTokenResponseObject(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *v)
	if err != nil {
		return err
	}
	v.extraProperties = extraProperties
	v.rawJSON = json.RawMessage(data)
	return nil
}

func (v *V1DeleteTokenResponseObject) String() string {
	if len(v.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(v.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(v); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", v)
}

type V1DeleteTokenResponse struct {
	// Tokens data for Delete
	Tokens []*V1DeleteTokenResponseObject `json:"tokens,omitempty" url:"tokens,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (v *V1DeleteTokenResponse) GetTokens() []*V1DeleteTokenResponseObject {
	if v == nil {
		return nil
	}
	return v.Tokens
}

func (v *V1DeleteTokenResponse) GetExtraProperties() map[string]interface{} {
	return v.extraProperties
}

func (v *V1DeleteTokenResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler V1DeleteTokenResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*v = V1DeleteTokenResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *v)
	if err != nil {
		return err
	}
	v.extraProperties = extraProperties
	v.rawJSON = json.RawMessage(data)
	return nil
}

func (v *V1DeleteTokenResponse) String() string {
	if len(v.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(v.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(v); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", v)
}
