// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/skyflowapi/skyflow-go/internal"
)

type ProtobufAny struct {
	Type *string `json:"@type,omitempty" url:"@type,omitempty"`

	ExtraProperties map[string]interface{} `json:"-" url:"-"`

	rawJSON json.RawMessage
}

func (p *ProtobufAny) GetType() *string {
	if p == nil {
		return nil
	}
	return p.Type
}

func (p *ProtobufAny) GetExtraProperties() map[string]interface{} {
	return p.ExtraProperties
}

func (p *ProtobufAny) UnmarshalJSON(data []byte) error {
	type embed ProtobufAny
	var unmarshaler = struct {
		embed
	}{
		embed: embed(*p),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*p = ProtobufAny(unmarshaler.embed)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.ExtraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *ProtobufAny) MarshalJSON() ([]byte, error) {
	type embed ProtobufAny
	var marshaler = struct {
		embed
	}{
		embed: embed(*p),
	}
	return internal.MarshalJSONWithExtraProperties(marshaler, p.ExtraProperties)
}

func (p *ProtobufAny) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

// `NullValue` is a singleton enumeration to represent the null value for the
// `Value` type union.
//
// The JSON representation for `NullValue` is JSON `null`.
//
//   - NULL_VALUE: Null value.
type ProtobufNullValue = string

type RpcStatus struct {
	Code    *int           `json:"code,omitempty" url:"code,omitempty"`
	Message *string        `json:"message,omitempty" url:"message,omitempty"`
	Details []*ProtobufAny `json:"details,omitempty" url:"details,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (r *RpcStatus) GetCode() *int {
	if r == nil {
		return nil
	}
	return r.Code
}

func (r *RpcStatus) GetMessage() *string {
	if r == nil {
		return nil
	}
	return r.Message
}

func (r *RpcStatus) GetDetails() []*ProtobufAny {
	if r == nil {
		return nil
	}
	return r.Details
}

func (r *RpcStatus) GetExtraProperties() map[string]interface{} {
	return r.extraProperties
}

func (r *RpcStatus) UnmarshalJSON(data []byte) error {
	type unmarshaler RpcStatus
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = RpcStatus(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *r)
	if err != nil {
		return err
	}
	r.extraProperties = extraProperties
	r.rawJSON = json.RawMessage(data)
	return nil
}

func (r *RpcStatus) String() string {
	if len(r.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(r.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}
