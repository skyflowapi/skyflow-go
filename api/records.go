// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/skyflowapi/skyflow-go/internal"
)

type V1ExecuteQueryRequest struct {
	// ID of the vault where data is being inserted
	VaultId *string `json:"vaultID,omitempty" url:"-"`
	// Query to execute.
	Query *string `json:"query,omitempty" url:"-"`
}

type V1ExecuteQueryRecordResponse struct {
	// Fields and values for the record. For example, `{'field_1':'value_1', 'field_2':'value_2'}`.
	Data map[string]interface{} `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (v *V1ExecuteQueryRecordResponse) GetData() map[string]interface{} {
	if v == nil {
		return nil
	}
	return v.Data
}

func (v *V1ExecuteQueryRecordResponse) GetExtraProperties() map[string]interface{} {
	return v.extraProperties
}

func (v *V1ExecuteQueryRecordResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler V1ExecuteQueryRecordResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*v = V1ExecuteQueryRecordResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *v)
	if err != nil {
		return err
	}
	v.extraProperties = extraProperties
	v.rawJSON = json.RawMessage(data)
	return nil
}

func (v *V1ExecuteQueryRecordResponse) String() string {
	if len(v.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(v.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(v); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", v)
}

type V1ExecuteQueryResponse struct {
	// Records corresponding to the specified query.
	Records []*V1ExecuteQueryRecordResponse `json:"records,omitempty" url:"records,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (v *V1ExecuteQueryResponse) GetRecords() []*V1ExecuteQueryRecordResponse {
	if v == nil {
		return nil
	}
	return v.Records
}

func (v *V1ExecuteQueryResponse) GetExtraProperties() map[string]interface{} {
	return v.extraProperties
}

func (v *V1ExecuteQueryResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler V1ExecuteQueryResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*v = V1ExecuteQueryResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *v)
	if err != nil {
		return err
	}
	v.extraProperties = extraProperties
	v.rawJSON = json.RawMessage(data)
	return nil
}

func (v *V1ExecuteQueryResponse) String() string {
	if len(v.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(v.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(v); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", v)
}
