name: "GoSec Scan"

# Run workflow each time code is pushed to your repository and on a schedule.
on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Extract Go version from go.mod
      id: go_version
      run: |
        # Check if go.mod exists before trying to extract the Go version
        if [ -f go.mod ]; then
          # Extract the Go version in the format "go 1.23.1" or "go 1.23"
          VERSION=$(grep -oP '^go \K[0-9]+\.[0-9]+\.[0-9]+' go.mod || grep -oP '^go \K[0-9]+\.[0-9]+' go.mod)
          
          if [ -z "$VERSION" ]; then
            echo "Error: Go version not found in go.mod file"
            exit 1
          fi
          
          echo "GO_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Go version extracted: $VERSION"
        else
          echo "Error: go.mod file not found in the repository."
          exit 1
        fi

    - name: Set up Go with the extracted version
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}  # Using the version extracted from go.mod

    - name: Security Scan
      uses: securego/gosec@master
      with:
        args: '-severity=high -confidence=high -no-fail -fmt json -out results.json ./...'

    - name: Display Raw GoSec JSON Output
      run: |
        echo "Displaying raw GoSec results..."
        cat results.json

    - name: Inspect the Structure of JSON
      run: |
        # Let's display the 'Issues' array to understand its structure
        echo "Inspecting the Issues structure..."
        jq '.Issues' results.json
