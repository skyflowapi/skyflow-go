/*
Skyflow Management API

# Management API  This API controls aspects of your account and schema, including workspaces, vaults, keys, users, permissions, and more.  The Management API is available from two base URIs:<ul><li><b>Sandbox:</b> https://manage.skyflowapis-preview.com</li><li><b>Production:</b> https://manage.skyflowapis.com</li></ul>  When you make an API call, you need to add two headers: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><tr><td>X-SKYFLOW-ACCOUNT-ID</td><td>Your Skyflow account ID.</td><td><code>X-SKYFLOW-ACCOUNT-ID: h451b763713e4424a7jke1bbkbbc84ef</code></td></tr><table/>

API version: v1
Contact: support@skyflow.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth

import (
	"encoding/json"
)

// checks if the V1GetAuthTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GetAuthTokenResponse{}

// V1GetAuthTokenResponse struct for V1GetAuthTokenResponse
type V1GetAuthTokenResponse struct {
	// AccessToken.
	AccessToken *string `json:"accessToken,omitempty"`
	// TokenType : Bearer.
	TokenType *string `json:"tokenType,omitempty"`
}

// NewV1GetAuthTokenResponse instantiates a new V1GetAuthTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GetAuthTokenResponse() *V1GetAuthTokenResponse {
	this := V1GetAuthTokenResponse{}
	return &this
}

// NewV1GetAuthTokenResponseWithDefaults instantiates a new V1GetAuthTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GetAuthTokenResponseWithDefaults() *V1GetAuthTokenResponse {
	this := V1GetAuthTokenResponse{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *V1GetAuthTokenResponse) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetAuthTokenResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *V1GetAuthTokenResponse) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *V1GetAuthTokenResponse) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *V1GetAuthTokenResponse) GetTokenType() string {
	if o == nil || IsNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetAuthTokenResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TokenType) {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *V1GetAuthTokenResponse) HasTokenType() bool {
	if o != nil && !IsNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *V1GetAuthTokenResponse) SetTokenType(v string) {
	o.TokenType = &v
}

func (o V1GetAuthTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GetAuthTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !IsNil(o.TokenType) {
		toSerialize["tokenType"] = o.TokenType
	}
	return toSerialize, nil
}

type NullableV1GetAuthTokenResponse struct {
	value *V1GetAuthTokenResponse
	isSet bool
}

func (v NullableV1GetAuthTokenResponse) Get() *V1GetAuthTokenResponse {
	return v.value
}

func (v *NullableV1GetAuthTokenResponse) Set(val *V1GetAuthTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GetAuthTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GetAuthTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GetAuthTokenResponse(val *V1GetAuthTokenResponse) *NullableV1GetAuthTokenResponse {
	return &NullableV1GetAuthTokenResponse{value: val, isSet: true}
}

func (v NullableV1GetAuthTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GetAuthTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


