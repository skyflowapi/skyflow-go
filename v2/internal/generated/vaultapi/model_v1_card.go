/*
Skyflow Data API

# Data API  This API inserts, retrieves, and otherwise manages data in a vaultapi.  The Data API is available from two base URIs. *identifier* is the identifier in your vaultapi's URL.<ul><li><b>Sandbox:</b> https://_*identifier*.vaultapi.skyflowapis-preview.com</li><li><b>Production:</b> https://_*identifier*.vaultapi.skyflowapis.com</li></ul>  When you make an API call, you need to add a header: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><table/>

API version: v1
Contact: support@skyflow.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vaultapi

import (
	"encoding/json"
)

// checks if the V1Card type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Card{}

// V1Card Card metadata of the requested BIN.
type V1Card struct {
	// BIN of the card.
	BIN *string `json:"BIN,omitempty"`
	// Name of the card issuer bank.
	IssuerName *string `json:"issuer_name,omitempty"`
	// Country code of the card.
	CountryCode *string `json:"country_code,omitempty"`
	// Currency of the card.
	Currency *string `json:"currency,omitempty"`
	// Type of the card.
	CardType *string `json:"card_type,omitempty"`
	// Category of the card.
	CardCategory *string `json:"card_category,omitempty"`
	// Scheme of the card.
	CardScheme *string `json:"card_scheme,omitempty"`
	// Last four digits of the card number.
	CardLastFourDigits *string `json:"card_last_four_digits,omitempty"`
	// Expiry date of the card.
	CardExpiry *string `json:"card_expiry,omitempty"`
}

// NewV1Card instantiates a new V1Card object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Card() *V1Card {
	this := V1Card{}
	return &this
}

// NewV1CardWithDefaults instantiates a new V1Card object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1CardWithDefaults() *V1Card {
	this := V1Card{}
	return &this
}

// GetBIN returns the BIN field value if set, zero value otherwise.
func (o *V1Card) GetBIN() string {
	if o == nil || IsNil(o.BIN) {
		var ret string
		return ret
	}
	return *o.BIN
}

// GetBINOk returns a tuple with the BIN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetBINOk() (*string, bool) {
	if o == nil || IsNil(o.BIN) {
		return nil, false
	}
	return o.BIN, true
}

// HasBIN returns a boolean if a field has been set.
func (o *V1Card) HasBIN() bool {
	if o != nil && !IsNil(o.BIN) {
		return true
	}

	return false
}

// SetBIN gets a reference to the given string and assigns it to the BIN field.
func (o *V1Card) SetBIN(v string) {
	o.BIN = &v
}

// GetIssuerName returns the IssuerName field value if set, zero value otherwise.
func (o *V1Card) GetIssuerName() string {
	if o == nil || IsNil(o.IssuerName) {
		var ret string
		return ret
	}
	return *o.IssuerName
}

// GetIssuerNameOk returns a tuple with the IssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetIssuerNameOk() (*string, bool) {
	if o == nil || IsNil(o.IssuerName) {
		return nil, false
	}
	return o.IssuerName, true
}

// HasIssuerName returns a boolean if a field has been set.
func (o *V1Card) HasIssuerName() bool {
	if o != nil && !IsNil(o.IssuerName) {
		return true
	}

	return false
}

// SetIssuerName gets a reference to the given string and assigns it to the IssuerName field.
func (o *V1Card) SetIssuerName(v string) {
	o.IssuerName = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *V1Card) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *V1Card) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *V1Card) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *V1Card) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *V1Card) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *V1Card) SetCurrency(v string) {
	o.Currency = &v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *V1Card) GetCardType() string {
	if o == nil || IsNil(o.CardType) {
		var ret string
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetCardTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CardType) {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *V1Card) HasCardType() bool {
	if o != nil && !IsNil(o.CardType) {
		return true
	}

	return false
}

// SetCardType gets a reference to the given string and assigns it to the CardType field.
func (o *V1Card) SetCardType(v string) {
	o.CardType = &v
}

// GetCardCategory returns the CardCategory field value if set, zero value otherwise.
func (o *V1Card) GetCardCategory() string {
	if o == nil || IsNil(o.CardCategory) {
		var ret string
		return ret
	}
	return *o.CardCategory
}

// GetCardCategoryOk returns a tuple with the CardCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetCardCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.CardCategory) {
		return nil, false
	}
	return o.CardCategory, true
}

// HasCardCategory returns a boolean if a field has been set.
func (o *V1Card) HasCardCategory() bool {
	if o != nil && !IsNil(o.CardCategory) {
		return true
	}

	return false
}

// SetCardCategory gets a reference to the given string and assigns it to the CardCategory field.
func (o *V1Card) SetCardCategory(v string) {
	o.CardCategory = &v
}

// GetCardScheme returns the CardScheme field value if set, zero value otherwise.
func (o *V1Card) GetCardScheme() string {
	if o == nil || IsNil(o.CardScheme) {
		var ret string
		return ret
	}
	return *o.CardScheme
}

// GetCardSchemeOk returns a tuple with the CardScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetCardSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.CardScheme) {
		return nil, false
	}
	return o.CardScheme, true
}

// HasCardScheme returns a boolean if a field has been set.
func (o *V1Card) HasCardScheme() bool {
	if o != nil && !IsNil(o.CardScheme) {
		return true
	}

	return false
}

// SetCardScheme gets a reference to the given string and assigns it to the CardScheme field.
func (o *V1Card) SetCardScheme(v string) {
	o.CardScheme = &v
}

// GetCardLastFourDigits returns the CardLastFourDigits field value if set, zero value otherwise.
func (o *V1Card) GetCardLastFourDigits() string {
	if o == nil || IsNil(o.CardLastFourDigits) {
		var ret string
		return ret
	}
	return *o.CardLastFourDigits
}

// GetCardLastFourDigitsOk returns a tuple with the CardLastFourDigits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetCardLastFourDigitsOk() (*string, bool) {
	if o == nil || IsNil(o.CardLastFourDigits) {
		return nil, false
	}
	return o.CardLastFourDigits, true
}

// HasCardLastFourDigits returns a boolean if a field has been set.
func (o *V1Card) HasCardLastFourDigits() bool {
	if o != nil && !IsNil(o.CardLastFourDigits) {
		return true
	}

	return false
}

// SetCardLastFourDigits gets a reference to the given string and assigns it to the CardLastFourDigits field.
func (o *V1Card) SetCardLastFourDigits(v string) {
	o.CardLastFourDigits = &v
}

// GetCardExpiry returns the CardExpiry field value if set, zero value otherwise.
func (o *V1Card) GetCardExpiry() string {
	if o == nil || IsNil(o.CardExpiry) {
		var ret string
		return ret
	}
	return *o.CardExpiry
}

// GetCardExpiryOk returns a tuple with the CardExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Card) GetCardExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.CardExpiry) {
		return nil, false
	}
	return o.CardExpiry, true
}

// HasCardExpiry returns a boolean if a field has been set.
func (o *V1Card) HasCardExpiry() bool {
	if o != nil && !IsNil(o.CardExpiry) {
		return true
	}

	return false
}

// SetCardExpiry gets a reference to the given string and assigns it to the CardExpiry field.
func (o *V1Card) SetCardExpiry(v string) {
	o.CardExpiry = &v
}

func (o V1Card) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Card) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BIN) {
		toSerialize["BIN"] = o.BIN
	}
	if !IsNil(o.IssuerName) {
		toSerialize["issuer_name"] = o.IssuerName
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CardType) {
		toSerialize["card_type"] = o.CardType
	}
	if !IsNil(o.CardCategory) {
		toSerialize["card_category"] = o.CardCategory
	}
	if !IsNil(o.CardScheme) {
		toSerialize["card_scheme"] = o.CardScheme
	}
	if !IsNil(o.CardLastFourDigits) {
		toSerialize["card_last_four_digits"] = o.CardLastFourDigits
	}
	if !IsNil(o.CardExpiry) {
		toSerialize["card_expiry"] = o.CardExpiry
	}
	return toSerialize, nil
}

type NullableV1Card struct {
	value *V1Card
	isSet bool
}

func (v NullableV1Card) Get() *V1Card {
	return v.value
}

func (v *NullableV1Card) Set(val *V1Card) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Card) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Card) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Card(val *V1Card) *NullableV1Card {
	return &NullableV1Card{value: val, isSet: true}
}

func (v NullableV1Card) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Card) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


