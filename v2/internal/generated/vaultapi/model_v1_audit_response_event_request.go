/*
Skyflow Data API

# Data API  This API inserts, retrieves, and otherwise manages data in a vaultapi.  The Data API is available from two base URIs. *identifier* is the identifier in your vaultapi's URL.<ul><li><b>Sandbox:</b> https://_*identifier*.vaultapi.skyflowapis-preview.com</li><li><b>Production:</b> https://_*identifier*.vaultapi.skyflowapis.com</li></ul>  When you make an API call, you need to add a header: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><table/>

API version: v1
Contact: support@skyflow.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vaultapi

import (
	"encoding/json"
)

// checks if the V1AuditResponseEventRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AuditResponseEventRequest{}

// V1AuditResponseEventRequest Contains fields for defining Request Properties.
type V1AuditResponseEventRequest struct {
	Data *AuditEventData `json:"data,omitempty"`
	// API name.
	ApiName *string `json:"apiName,omitempty"`
	// The workspaceID (if any) of the request.
	WorkspaceID *string `json:"workspaceID,omitempty"`
	// The vaultID (if any) of the request.
	VaultID *string `json:"vaultID,omitempty"`
	// Tags associated with the event. To provide better search capabilities. Like login.
	Tags []string `json:"tags,omitempty"`
	// time when this request is generated, use extention method to set it.
	Timestamp *string                         `json:"timestamp,omitempty"`
	ActionType *RequestActionType             `json:"actionType,omitempty"`
	ResourceType *AuditEventAuditResourceType `json:"resourceType,omitempty"`
	HttpInfo *AuditEventHTTPInfo              `json:"httpInfo,omitempty"`
}

// NewV1AuditResponseEventRequest instantiates a new V1AuditResponseEventRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AuditResponseEventRequest() *V1AuditResponseEventRequest {
	this := V1AuditResponseEventRequest{}
	var actionType RequestActionType = REQUESTACTIONTYPE_NONE
	this.ActionType = &actionType
	var resourceType AuditEventAuditResourceType = AUDITEVENTAUDITRESOURCETYPE_NONE_API
	this.ResourceType = &resourceType
	return &this
}

// NewV1AuditResponseEventRequestWithDefaults instantiates a new V1AuditResponseEventRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AuditResponseEventRequestWithDefaults() *V1AuditResponseEventRequest {
	this := V1AuditResponseEventRequest{}
	var actionType RequestActionType = REQUESTACTIONTYPE_NONE
	this.ActionType = &actionType
	var resourceType AuditEventAuditResourceType = AUDITEVENTAUDITRESOURCETYPE_NONE_API
	this.ResourceType = &resourceType
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetData() AuditEventData {
	if o == nil || IsNil(o.Data) {
		var ret AuditEventData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetDataOk() (*AuditEventData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AuditEventData and assigns it to the Data field.
func (o *V1AuditResponseEventRequest) SetData(v AuditEventData) {
	o.Data = &v
}

// GetApiName returns the ApiName field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetApiName() string {
	if o == nil || IsNil(o.ApiName) {
		var ret string
		return ret
	}
	return *o.ApiName
}

// GetApiNameOk returns a tuple with the ApiName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetApiNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApiName) {
		return nil, false
	}
	return o.ApiName, true
}

// HasApiName returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasApiName() bool {
	if o != nil && !IsNil(o.ApiName) {
		return true
	}

	return false
}

// SetApiName gets a reference to the given string and assigns it to the ApiName field.
func (o *V1AuditResponseEventRequest) SetApiName(v string) {
	o.ApiName = &v
}

// GetWorkspaceID returns the WorkspaceID field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetWorkspaceID() string {
	if o == nil || IsNil(o.WorkspaceID) {
		var ret string
		return ret
	}
	return *o.WorkspaceID
}

// GetWorkspaceIDOk returns a tuple with the WorkspaceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetWorkspaceIDOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceID) {
		return nil, false
	}
	return o.WorkspaceID, true
}

// HasWorkspaceID returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasWorkspaceID() bool {
	if o != nil && !IsNil(o.WorkspaceID) {
		return true
	}

	return false
}

// SetWorkspaceID gets a reference to the given string and assigns it to the WorkspaceID field.
func (o *V1AuditResponseEventRequest) SetWorkspaceID(v string) {
	o.WorkspaceID = &v
}

// GetVaultID returns the VaultID field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetVaultID() string {
	if o == nil || IsNil(o.VaultID) {
		var ret string
		return ret
	}
	return *o.VaultID
}

// GetVaultIDOk returns a tuple with the VaultID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetVaultIDOk() (*string, bool) {
	if o == nil || IsNil(o.VaultID) {
		return nil, false
	}
	return o.VaultID, true
}

// HasVaultID returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasVaultID() bool {
	if o != nil && !IsNil(o.VaultID) {
		return true
	}

	return false
}

// SetVaultID gets a reference to the given string and assigns it to the VaultID field.
func (o *V1AuditResponseEventRequest) SetVaultID(v string) {
	o.VaultID = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *V1AuditResponseEventRequest) SetTags(v []string) {
	o.Tags = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *V1AuditResponseEventRequest) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetActionType returns the ActionType field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetActionType() RequestActionType {
	if o == nil || IsNil(o.ActionType) {
		var ret RequestActionType
		return ret
	}
	return *o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetActionTypeOk() (*RequestActionType, bool) {
	if o == nil || IsNil(o.ActionType) {
		return nil, false
	}
	return o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasActionType() bool {
	if o != nil && !IsNil(o.ActionType) {
		return true
	}

	return false
}

// SetActionType gets a reference to the given RequestActionType and assigns it to the ActionType field.
func (o *V1AuditResponseEventRequest) SetActionType(v RequestActionType) {
	o.ActionType = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetResourceType() AuditEventAuditResourceType {
	if o == nil || IsNil(o.ResourceType) {
		var ret AuditEventAuditResourceType
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetResourceTypeOk() (*AuditEventAuditResourceType, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given AuditEventAuditResourceType and assigns it to the ResourceType field.
func (o *V1AuditResponseEventRequest) SetResourceType(v AuditEventAuditResourceType) {
	o.ResourceType = &v
}

// GetHttpInfo returns the HttpInfo field value if set, zero value otherwise.
func (o *V1AuditResponseEventRequest) GetHttpInfo() AuditEventHTTPInfo {
	if o == nil || IsNil(o.HttpInfo) {
		var ret AuditEventHTTPInfo
		return ret
	}
	return *o.HttpInfo
}

// GetHttpInfoOk returns a tuple with the HttpInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditResponseEventRequest) GetHttpInfoOk() (*AuditEventHTTPInfo, bool) {
	if o == nil || IsNil(o.HttpInfo) {
		return nil, false
	}
	return o.HttpInfo, true
}

// HasHttpInfo returns a boolean if a field has been set.
func (o *V1AuditResponseEventRequest) HasHttpInfo() bool {
	if o != nil && !IsNil(o.HttpInfo) {
		return true
	}

	return false
}

// SetHttpInfo gets a reference to the given AuditEventHTTPInfo and assigns it to the HttpInfo field.
func (o *V1AuditResponseEventRequest) SetHttpInfo(v AuditEventHTTPInfo) {
	o.HttpInfo = &v
}

func (o V1AuditResponseEventRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AuditResponseEventRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.ApiName) {
		toSerialize["apiName"] = o.ApiName
	}
	if !IsNil(o.WorkspaceID) {
		toSerialize["workspaceID"] = o.WorkspaceID
	}
	if !IsNil(o.VaultID) {
		toSerialize["vaultID"] = o.VaultID
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.ActionType) {
		toSerialize["actionType"] = o.ActionType
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.HttpInfo) {
		toSerialize["httpInfo"] = o.HttpInfo
	}
	return toSerialize, nil
}

type NullableV1AuditResponseEventRequest struct {
	value *V1AuditResponseEventRequest
	isSet bool
}

func (v NullableV1AuditResponseEventRequest) Get() *V1AuditResponseEventRequest {
	return v.value
}

func (v *NullableV1AuditResponseEventRequest) Set(val *V1AuditResponseEventRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AuditResponseEventRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AuditResponseEventRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AuditResponseEventRequest(val *V1AuditResponseEventRequest) *NullableV1AuditResponseEventRequest {
	return &NullableV1AuditResponseEventRequest{value: val, isSet: true}
}

func (v NullableV1AuditResponseEventRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AuditResponseEventRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


