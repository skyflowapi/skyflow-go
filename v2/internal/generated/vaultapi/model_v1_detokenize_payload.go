/*
Skyflow Data API

# Data API  This API inserts, retrieves, and otherwise manages data in a vaultapi.  The Data API is available from two base URIs. *identifier* is the identifier in your vaultapi's URL.<ul><li><b>Sandbox:</b> https://_*identifier*.vaultapi.skyflowapis-preview.com</li><li><b>Production:</b> https://_*identifier*.vaultapi.skyflowapis.com</li></ul>  When you make an API call, you need to add a header: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><table/>

API version: v1
Contact: support@skyflow.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vaultapi

import (
	"encoding/json"
)

// checks if the V1DetokenizePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DetokenizePayload{}

// V1DetokenizePayload struct for V1DetokenizePayload
type V1DetokenizePayload struct {
	// Detokenization details.
	DetokenizationParameters []V1DetokenizeRecordRequest `json:"detokenizationParameters,omitempty"`
	// If `true`, returns download URLs for fields with a file data type. URLs are valid for 15 minutes. If virus scanning is enabled, only returns if the file is clean.
	DownloadURL *bool `json:"downloadURL,omitempty"`
	// If `true`, the detokenization request continues even if an error occurs.
	ContinueOnError *bool `json:"continueOnError,omitempty"`
}

// NewV1DetokenizePayload instantiates a new V1DetokenizePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DetokenizePayload() *V1DetokenizePayload {
	this := V1DetokenizePayload{}
	var continueOnError bool = false
	this.ContinueOnError = &continueOnError
	return &this
}

// NewV1DetokenizePayloadWithDefaults instantiates a new V1DetokenizePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DetokenizePayloadWithDefaults() *V1DetokenizePayload {
	this := V1DetokenizePayload{}
	var continueOnError bool = false
	this.ContinueOnError = &continueOnError
	return &this
}

// GetDetokenizationParameters returns the DetokenizationParameters field value if set, zero value otherwise.
func (o *V1DetokenizePayload) GetDetokenizationParameters() []V1DetokenizeRecordRequest {
	if o == nil || IsNil(o.DetokenizationParameters) {
		var ret []V1DetokenizeRecordRequest
		return ret
	}
	return o.DetokenizationParameters
}

// GetDetokenizationParametersOk returns a tuple with the DetokenizationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DetokenizePayload) GetDetokenizationParametersOk() ([]V1DetokenizeRecordRequest, bool) {
	if o == nil || IsNil(o.DetokenizationParameters) {
		return nil, false
	}
	return o.DetokenizationParameters, true
}

// HasDetokenizationParameters returns a boolean if a field has been set.
func (o *V1DetokenizePayload) HasDetokenizationParameters() bool {
	if o != nil && !IsNil(o.DetokenizationParameters) {
		return true
	}

	return false
}

// SetDetokenizationParameters gets a reference to the given []V1DetokenizeRecordRequest and assigns it to the DetokenizationParameters field.
func (o *V1DetokenizePayload) SetDetokenizationParameters(v []V1DetokenizeRecordRequest) {
	o.DetokenizationParameters = v
}

// GetDownloadURL returns the DownloadURL field value if set, zero value otherwise.
func (o *V1DetokenizePayload) GetDownloadURL() bool {
	if o == nil || IsNil(o.DownloadURL) {
		var ret bool
		return ret
	}
	return *o.DownloadURL
}

// GetDownloadURLOk returns a tuple with the DownloadURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DetokenizePayload) GetDownloadURLOk() (*bool, bool) {
	if o == nil || IsNil(o.DownloadURL) {
		return nil, false
	}
	return o.DownloadURL, true
}

// HasDownloadURL returns a boolean if a field has been set.
func (o *V1DetokenizePayload) HasDownloadURL() bool {
	if o != nil && !IsNil(o.DownloadURL) {
		return true
	}

	return false
}

// SetDownloadURL gets a reference to the given bool and assigns it to the DownloadURL field.
func (o *V1DetokenizePayload) SetDownloadURL(v bool) {
	o.DownloadURL = &v
}

// GetContinueOnError returns the ContinueOnError field value if set, zero value otherwise.
func (o *V1DetokenizePayload) GetContinueOnError() bool {
	if o == nil || IsNil(o.ContinueOnError) {
		var ret bool
		return ret
	}
	return *o.ContinueOnError
}

// GetContinueOnErrorOk returns a tuple with the ContinueOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DetokenizePayload) GetContinueOnErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.ContinueOnError) {
		return nil, false
	}
	return o.ContinueOnError, true
}

// HasContinueOnError returns a boolean if a field has been set.
func (o *V1DetokenizePayload) HasContinueOnError() bool {
	if o != nil && !IsNil(o.ContinueOnError) {
		return true
	}

	return false
}

// SetContinueOnError gets a reference to the given bool and assigns it to the ContinueOnError field.
func (o *V1DetokenizePayload) SetContinueOnError(v bool) {
	o.ContinueOnError = &v
}

func (o V1DetokenizePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DetokenizePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DetokenizationParameters) {
		toSerialize["detokenizationParameters"] = o.DetokenizationParameters
	}
	if !IsNil(o.DownloadURL) {
		toSerialize["downloadURL"] = o.DownloadURL
	}
	if !IsNil(o.ContinueOnError) {
		toSerialize["continueOnError"] = o.ContinueOnError
	}
	return toSerialize, nil
}

type NullableV1DetokenizePayload struct {
	value *V1DetokenizePayload
	isSet bool
}

func (v NullableV1DetokenizePayload) Get() *V1DetokenizePayload {
	return v.value
}

func (v *NullableV1DetokenizePayload) Set(val *V1DetokenizePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DetokenizePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DetokenizePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DetokenizePayload(val *V1DetokenizePayload) *NullableV1DetokenizePayload {
	return &NullableV1DetokenizePayload{value: val, isSet: true}
}

func (v NullableV1DetokenizePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DetokenizePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


