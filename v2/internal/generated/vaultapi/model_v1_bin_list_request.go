/*
Skyflow Data API

# Data API  This API inserts, retrieves, and otherwise manages data in a vaultapi.  The Data API is available from two base URIs. *identifier* is the identifier in your vaultapi's URL.<ul><li><b>Sandbox:</b> https://_*identifier*.vaultapi.skyflowapis-preview.com</li><li><b>Production:</b> https://_*identifier*.vaultapi.skyflowapis.com</li></ul>  When you make an API call, you need to add a header: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><table/>

API version: v1
Contact: support@skyflow.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vaultapi

import (
	"encoding/json"
)

// checks if the V1BINListRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BINListRequest{}

// V1BINListRequest Request to return specific card metadata.
type V1BINListRequest struct {
	// Fields to return. If not specified, all fields are returned.
	Fields []string `json:"fields,omitempty"`
	// BIN of the card.
	BIN *string                            `json:"BIN,omitempty"`
	VaultSchemaConfig *V1VaultSchemaConfig `json:"vault_schema_config,omitempty"`
	// <code>skyflow_id</code> of the record.
	SkyflowId *string `json:"skyflow_id,omitempty"`
}

// NewV1BINListRequest instantiates a new V1BINListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BINListRequest() *V1BINListRequest {
	this := V1BINListRequest{}
	return &this
}

// NewV1BINListRequestWithDefaults instantiates a new V1BINListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BINListRequestWithDefaults() *V1BINListRequest {
	this := V1BINListRequest{}
	return &this
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *V1BINListRequest) GetFields() []string {
	if o == nil || IsNil(o.Fields) {
		var ret []string
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BINListRequest) GetFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *V1BINListRequest) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []string and assigns it to the Fields field.
func (o *V1BINListRequest) SetFields(v []string) {
	o.Fields = v
}

// GetBIN returns the BIN field value if set, zero value otherwise.
func (o *V1BINListRequest) GetBIN() string {
	if o == nil || IsNil(o.BIN) {
		var ret string
		return ret
	}
	return *o.BIN
}

// GetBINOk returns a tuple with the BIN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BINListRequest) GetBINOk() (*string, bool) {
	if o == nil || IsNil(o.BIN) {
		return nil, false
	}
	return o.BIN, true
}

// HasBIN returns a boolean if a field has been set.
func (o *V1BINListRequest) HasBIN() bool {
	if o != nil && !IsNil(o.BIN) {
		return true
	}

	return false
}

// SetBIN gets a reference to the given string and assigns it to the BIN field.
func (o *V1BINListRequest) SetBIN(v string) {
	o.BIN = &v
}

// GetVaultSchemaConfig returns the VaultSchemaConfig field value if set, zero value otherwise.
func (o *V1BINListRequest) GetVaultSchemaConfig() V1VaultSchemaConfig {
	if o == nil || IsNil(o.VaultSchemaConfig) {
		var ret V1VaultSchemaConfig
		return ret
	}
	return *o.VaultSchemaConfig
}

// GetVaultSchemaConfigOk returns a tuple with the VaultSchemaConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BINListRequest) GetVaultSchemaConfigOk() (*V1VaultSchemaConfig, bool) {
	if o == nil || IsNil(o.VaultSchemaConfig) {
		return nil, false
	}
	return o.VaultSchemaConfig, true
}

// HasVaultSchemaConfig returns a boolean if a field has been set.
func (o *V1BINListRequest) HasVaultSchemaConfig() bool {
	if o != nil && !IsNil(o.VaultSchemaConfig) {
		return true
	}

	return false
}

// SetVaultSchemaConfig gets a reference to the given V1VaultSchemaConfig and assigns it to the VaultSchemaConfig field.
func (o *V1BINListRequest) SetVaultSchemaConfig(v V1VaultSchemaConfig) {
	o.VaultSchemaConfig = &v
}

// GetSkyflowId returns the SkyflowId field value if set, zero value otherwise.
func (o *V1BINListRequest) GetSkyflowId() string {
	if o == nil || IsNil(o.SkyflowId) {
		var ret string
		return ret
	}
	return *o.SkyflowId
}

// GetSkyflowIdOk returns a tuple with the SkyflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BINListRequest) GetSkyflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.SkyflowId) {
		return nil, false
	}
	return o.SkyflowId, true
}

// HasSkyflowId returns a boolean if a field has been set.
func (o *V1BINListRequest) HasSkyflowId() bool {
	if o != nil && !IsNil(o.SkyflowId) {
		return true
	}

	return false
}

// SetSkyflowId gets a reference to the given string and assigns it to the SkyflowId field.
func (o *V1BINListRequest) SetSkyflowId(v string) {
	o.SkyflowId = &v
}

func (o V1BINListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BINListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.BIN) {
		toSerialize["BIN"] = o.BIN
	}
	if !IsNil(o.VaultSchemaConfig) {
		toSerialize["vault_schema_config"] = o.VaultSchemaConfig
	}
	if !IsNil(o.SkyflowId) {
		toSerialize["skyflow_id"] = o.SkyflowId
	}
	return toSerialize, nil
}

type NullableV1BINListRequest struct {
	value *V1BINListRequest
	isSet bool
}

func (v NullableV1BINListRequest) Get() *V1BINListRequest {
	return v.value
}

func (v *NullableV1BINListRequest) Set(val *V1BINListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BINListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BINListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BINListRequest(val *V1BINListRequest) *NullableV1BINListRequest {
	return &NullableV1BINListRequest{value: val, isSet: true}
}

func (v NullableV1BINListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BINListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


