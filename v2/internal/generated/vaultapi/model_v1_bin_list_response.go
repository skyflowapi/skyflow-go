/*
Skyflow Data API

# Data API  This API inserts, retrieves, and otherwise manages data in a vaultapi.  The Data API is available from two base URIs. *identifier* is the identifier in your vaultapi's URL.<ul><li><b>Sandbox:</b> https://_*identifier*.vaultapi.skyflowapis-preview.com</li><li><b>Production:</b> https://_*identifier*.vaultapi.skyflowapis.com</li></ul>  When you make an API call, you need to add a header: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><table/>

API version: v1
Contact: support@skyflow.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vaultapi

import (
	"encoding/json"
)

// checks if the V1BINListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BINListResponse{}

// V1BINListResponse Response to the Get BIN request.
type V1BINListResponse struct {
	// Card metadata associated with the specified BIN.
	CardsData []V1Card `json:"cards_data,omitempty"`
}

// NewV1BINListResponse instantiates a new V1BINListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BINListResponse() *V1BINListResponse {
	this := V1BINListResponse{}
	return &this
}

// NewV1BINListResponseWithDefaults instantiates a new V1BINListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BINListResponseWithDefaults() *V1BINListResponse {
	this := V1BINListResponse{}
	return &this
}

// GetCardsData returns the CardsData field value if set, zero value otherwise.
func (o *V1BINListResponse) GetCardsData() []V1Card {
	if o == nil || IsNil(o.CardsData) {
		var ret []V1Card
		return ret
	}
	return o.CardsData
}

// GetCardsDataOk returns a tuple with the CardsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BINListResponse) GetCardsDataOk() ([]V1Card, bool) {
	if o == nil || IsNil(o.CardsData) {
		return nil, false
	}
	return o.CardsData, true
}

// HasCardsData returns a boolean if a field has been set.
func (o *V1BINListResponse) HasCardsData() bool {
	if o != nil && !IsNil(o.CardsData) {
		return true
	}

	return false
}

// SetCardsData gets a reference to the given []V1Card and assigns it to the CardsData field.
func (o *V1BINListResponse) SetCardsData(v []V1Card) {
	o.CardsData = v
}

func (o V1BINListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BINListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CardsData) {
		toSerialize["cards_data"] = o.CardsData
	}
	return toSerialize, nil
}

type NullableV1BINListResponse struct {
	value *V1BINListResponse
	isSet bool
}

func (v NullableV1BINListResponse) Get() *V1BINListResponse {
	return v.value
}

func (v *NullableV1BINListResponse) Set(val *V1BINListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BINListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BINListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BINListResponse(val *V1BINListResponse) *NullableV1BINListResponse {
	return &NullableV1BINListResponse{value: val, isSet: true}
}

func (v NullableV1BINListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BINListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


