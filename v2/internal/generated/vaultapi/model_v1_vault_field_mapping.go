/*
Skyflow Data API

# Data API  This API inserts, retrieves, and otherwise manages data in a vaultapi.  The Data API is available from two base URIs. *identifier* is the identifier in your vaultapi's URL.<ul><li><b>Sandbox:</b> https://_*identifier*.vaultapi.skyflowapis-preview.com</li><li><b>Production:</b> https://_*identifier*.vaultapi.skyflowapis.com</li></ul>  When you make an API call, you need to add a header: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><table/>

API version: v1
Contact: support@skyflow.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vaultapi

import (
	"encoding/json"
)

// checks if the V1VaultFieldMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1VaultFieldMapping{}

// V1VaultFieldMapping Mapping of the fields in the vaultapi to the fields to use for the lookup.
type V1VaultFieldMapping struct {
	// Name of the column that stores the card number.
	CardNumber *string `json:"card_number,omitempty"`
	// Name of the column that stores the card number suffix.
	CardLastFourDigits *string `json:"card_last_four_digits,omitempty"`
	// Name of the column that stores the expiry date.
	CardExpiry *string `json:"card_expiry,omitempty"`
}

// NewV1VaultFieldMapping instantiates a new V1VaultFieldMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1VaultFieldMapping() *V1VaultFieldMapping {
	this := V1VaultFieldMapping{}
	return &this
}

// NewV1VaultFieldMappingWithDefaults instantiates a new V1VaultFieldMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1VaultFieldMappingWithDefaults() *V1VaultFieldMapping {
	this := V1VaultFieldMapping{}
	return &this
}

// GetCardNumber returns the CardNumber field value if set, zero value otherwise.
func (o *V1VaultFieldMapping) GetCardNumber() string {
	if o == nil || IsNil(o.CardNumber) {
		var ret string
		return ret
	}
	return *o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VaultFieldMapping) GetCardNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CardNumber) {
		return nil, false
	}
	return o.CardNumber, true
}

// HasCardNumber returns a boolean if a field has been set.
func (o *V1VaultFieldMapping) HasCardNumber() bool {
	if o != nil && !IsNil(o.CardNumber) {
		return true
	}

	return false
}

// SetCardNumber gets a reference to the given string and assigns it to the CardNumber field.
func (o *V1VaultFieldMapping) SetCardNumber(v string) {
	o.CardNumber = &v
}

// GetCardLastFourDigits returns the CardLastFourDigits field value if set, zero value otherwise.
func (o *V1VaultFieldMapping) GetCardLastFourDigits() string {
	if o == nil || IsNil(o.CardLastFourDigits) {
		var ret string
		return ret
	}
	return *o.CardLastFourDigits
}

// GetCardLastFourDigitsOk returns a tuple with the CardLastFourDigits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VaultFieldMapping) GetCardLastFourDigitsOk() (*string, bool) {
	if o == nil || IsNil(o.CardLastFourDigits) {
		return nil, false
	}
	return o.CardLastFourDigits, true
}

// HasCardLastFourDigits returns a boolean if a field has been set.
func (o *V1VaultFieldMapping) HasCardLastFourDigits() bool {
	if o != nil && !IsNil(o.CardLastFourDigits) {
		return true
	}

	return false
}

// SetCardLastFourDigits gets a reference to the given string and assigns it to the CardLastFourDigits field.
func (o *V1VaultFieldMapping) SetCardLastFourDigits(v string) {
	o.CardLastFourDigits = &v
}

// GetCardExpiry returns the CardExpiry field value if set, zero value otherwise.
func (o *V1VaultFieldMapping) GetCardExpiry() string {
	if o == nil || IsNil(o.CardExpiry) {
		var ret string
		return ret
	}
	return *o.CardExpiry
}

// GetCardExpiryOk returns a tuple with the CardExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VaultFieldMapping) GetCardExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.CardExpiry) {
		return nil, false
	}
	return o.CardExpiry, true
}

// HasCardExpiry returns a boolean if a field has been set.
func (o *V1VaultFieldMapping) HasCardExpiry() bool {
	if o != nil && !IsNil(o.CardExpiry) {
		return true
	}

	return false
}

// SetCardExpiry gets a reference to the given string and assigns it to the CardExpiry field.
func (o *V1VaultFieldMapping) SetCardExpiry(v string) {
	o.CardExpiry = &v
}

func (o V1VaultFieldMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1VaultFieldMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CardNumber) {
		toSerialize["card_number"] = o.CardNumber
	}
	if !IsNil(o.CardLastFourDigits) {
		toSerialize["card_last_four_digits"] = o.CardLastFourDigits
	}
	if !IsNil(o.CardExpiry) {
		toSerialize["card_expiry"] = o.CardExpiry
	}
	return toSerialize, nil
}

type NullableV1VaultFieldMapping struct {
	value *V1VaultFieldMapping
	isSet bool
}

func (v NullableV1VaultFieldMapping) Get() *V1VaultFieldMapping {
	return v.value
}

func (v *NullableV1VaultFieldMapping) Set(val *V1VaultFieldMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableV1VaultFieldMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableV1VaultFieldMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1VaultFieldMapping(val *V1VaultFieldMapping) *NullableV1VaultFieldMapping {
	return &NullableV1VaultFieldMapping{value: val, isSet: true}
}

func (v NullableV1VaultFieldMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1VaultFieldMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


