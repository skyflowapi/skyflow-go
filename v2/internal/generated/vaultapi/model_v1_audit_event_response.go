/*
Skyflow Data API

# Data API  This API inserts, retrieves, and otherwise manages data in a vaultapi.  The Data API is available from two base URIs. *identifier* is the identifier in your vaultapi's URL.<ul><li><b>Sandbox:</b> https://_*identifier*.vaultapi.skyflowapis-preview.com</li><li><b>Production:</b> https://_*identifier*.vaultapi.skyflowapis.com</li></ul>  When you make an API call, you need to add a header: <table><tr><th>Header</th><th>Value</th><th>Example</th></tr><tr><td>Authorization</td><td>A Bearer Token. See <a href='/api-authentication/'>API Authentication</a>.</td><td><code>Authorization: Bearer eyJhbGciOiJSUzI...1NiIsJdfPA</code></td></tr><table/>

API version: v1
Contact: support@skyflow.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vaultapi

import (
	"encoding/json"
)

// checks if the V1AuditEventResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AuditEventResponse{}

// V1AuditEventResponse Contains fields for defining Response Properties.
type V1AuditEventResponse struct {
	// The status of the overall operation.
	Code *int32 `json:"code,omitempty"`
	// The status message for the overall operation.
	Message *string      `json:"message,omitempty"`
	Data *AuditEventData `json:"data,omitempty"`
	// time when this response is generated,  use extention method to set it.
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewV1AuditEventResponse instantiates a new V1AuditEventResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AuditEventResponse() *V1AuditEventResponse {
	this := V1AuditEventResponse{}
	return &this
}

// NewV1AuditEventResponseWithDefaults instantiates a new V1AuditEventResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AuditEventResponseWithDefaults() *V1AuditEventResponse {
	this := V1AuditEventResponse{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *V1AuditEventResponse) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditEventResponse) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *V1AuditEventResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *V1AuditEventResponse) SetCode(v int32) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *V1AuditEventResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditEventResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *V1AuditEventResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *V1AuditEventResponse) SetMessage(v string) {
	o.Message = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V1AuditEventResponse) GetData() AuditEventData {
	if o == nil || IsNil(o.Data) {
		var ret AuditEventData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditEventResponse) GetDataOk() (*AuditEventData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V1AuditEventResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AuditEventData and assigns it to the Data field.
func (o *V1AuditEventResponse) SetData(v AuditEventData) {
	o.Data = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *V1AuditEventResponse) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditEventResponse) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *V1AuditEventResponse) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *V1AuditEventResponse) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o V1AuditEventResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AuditEventResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableV1AuditEventResponse struct {
	value *V1AuditEventResponse
	isSet bool
}

func (v NullableV1AuditEventResponse) Get() *V1AuditEventResponse {
	return v.value
}

func (v *NullableV1AuditEventResponse) Set(val *V1AuditEventResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AuditEventResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AuditEventResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AuditEventResponse(val *V1AuditEventResponse) *NullableV1AuditEventResponse {
	return &NullableV1AuditEventResponse{value: val, isSet: true}
}

func (v NullableV1AuditEventResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AuditEventResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


