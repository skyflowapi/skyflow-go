// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/skyflowapi/skyflow-go/v2/internal/generated/internal"
)

type CheckGuardrailsRequest struct {
	VaultId VaultId `json:"vault_id" url:"-"`
	// Text to check against guardrails.
	Text string `json:"text" url:"-"`
	// Check for toxicity in the text.
	CheckToxicity *bool `json:"check_toxicity,omitempty" url:"-"`
	// List of topics to deny.
	DenyTopics []string `json:"deny_topics,omitempty" url:"-"`
}

// Response to check guardrails.
type CheckGuardrailsResponse struct {
	// Text that was checked against guardrails.
	Text *string `json:"text,omitempty" url:"text,omitempty"`
	// Whether the text is toxic.
	Toxicity *bool `json:"toxicity,omitempty" url:"toxicity,omitempty"`
	// Whether any denied topics were found.
	DeniedTopics *bool `json:"denied_topics,omitempty" url:"denied_topics,omitempty"`
	// Validation result.
	Validation *CheckGuardrailsResponseValidation `json:"validation,omitempty" url:"validation,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *CheckGuardrailsResponse) GetText() *string {
	if c == nil {
		return nil
	}
	return c.Text
}

func (c *CheckGuardrailsResponse) GetToxicity() *bool {
	if c == nil {
		return nil
	}
	return c.Toxicity
}

func (c *CheckGuardrailsResponse) GetDeniedTopics() *bool {
	if c == nil {
		return nil
	}
	return c.DeniedTopics
}

func (c *CheckGuardrailsResponse) GetValidation() *CheckGuardrailsResponseValidation {
	if c == nil {
		return nil
	}
	return c.Validation
}

func (c *CheckGuardrailsResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CheckGuardrailsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CheckGuardrailsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CheckGuardrailsResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *CheckGuardrailsResponse) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

// Validation result.
type CheckGuardrailsResponseValidation string

const (
	CheckGuardrailsResponseValidationFailed CheckGuardrailsResponseValidation = "failed"
	CheckGuardrailsResponseValidationPassed CheckGuardrailsResponseValidation = "passed"
)

func NewCheckGuardrailsResponseValidationFromString(s string) (CheckGuardrailsResponseValidation, error) {
	switch s {
	case "failed":
		return CheckGuardrailsResponseValidationFailed, nil
	case "passed":
		return CheckGuardrailsResponseValidationPassed, nil
	}
	var t CheckGuardrailsResponseValidation
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c CheckGuardrailsResponseValidation) Ptr() *CheckGuardrailsResponseValidation {
	return &c
}
